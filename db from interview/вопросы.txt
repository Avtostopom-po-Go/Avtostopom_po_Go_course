==============================
    Database
==============================
    - Какие преимущества документоориентированных БД vs Реляционными
    - Что такое транзакция? Для чего она нужна?
    - Что такое ACID?
    - Какие есть уровни изоляций транзакций. Зачем они нужны? Как отличаются?
    - Расскажи подробнее про триггеры (ППО). Какие есть плюсы-минусы?
    - В чем разница между WHERE и HAVING? Можно HAVING использовать без GROUP BY?
    - Что такое JOIN? Какие виды бывают? Можно без RIGHT JOIN обойтись?
    - Сталкивался с оптимизатором запросов? Как ты оптимизируешь запросы?
    - Что можем сделать если запрос жирный и много JOINов?
    - Зачем нужна денормализация БД?
    - Слышал про нормализацию? Расскажи в двух словах. Приходилось ли денормализовать таблицы?
    - Что такое нормальная форма? Зачем?
    - Сталкивался с шардированием? А с партицированием?
    - Какие знаете индексы PostgreSQL, зачем они нужны и какие преимущества?
    - Почему плохо использовать много индексов?
    - Ситуация. Написал запрос к партицированной таблице. Локально работает быстро, на проде тоже быстро. Но через какое-то время стал работать медленно. Как узнать в чем проблема?
    - Что показывает план выполнения? Что показывает EXPLAIN, а что EXPLAIN ANALYZE?
    - Если бы ты выбирал ключ шардирования, то на что бы ориентировался, с точки зрения оптимальности получения данных?
    - Как использовал редис в работе? Может по теории что-то читал?
    - Слышал про MongoDB? В каких случаях применял бы ее? Какие минусы?
    - Что такое репликация? Что происходит про репликации, что передается на реплики?
    - При синхронной репликации данные сразу доступны на реплике?
    - Внешние ключи используешь? Для чего они нужны? Есть какие-то минусы?